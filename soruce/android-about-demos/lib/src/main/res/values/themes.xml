<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <!--   a darker variant of the primary color, used for the status bar (on Android 5.0+) and contextual app bars -->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <!--   color for the app bar and other primary UI elements -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <!--   a secondary color for controls like checkboxes and text fields -->
        <item name="colorAccent">@color/colorAccent</item>

        <item name="color3">@android:color/holo_orange_dark</item>
        <item name="color4">@android:color/holo_green_light</item>

        <item name="drawable1">@android:drawable/star_big_off</item>
        <item name="drawable2">@android:drawable/star_big_on</item>

        <!-- change the activity background  -->
        <!--<item name="android:windowBackground">@color/colorAccent</item>-->

        <!-- Custom View, start -->
        <item name="MyViewStyle">@style/MyView</item>
        <item name="rvText">@string/attribute_5_attribute_in_theme</item>
        <!--<item name="rectViewStyle">@style/RectView_StyleInTheme</item>-->

        <item name="ColorsIntegerArray">@array/colors_integer_array</item>
        <!-- Custom View, end -->

        <!-- layout color -->
        <!--<item name="android:windowBackground">@android:color/holo_blue_bright</item>-->

        <!--<item name="android:windowContentOverlay">@android:color/holo_blue_bright</item>-->
    </style>

    <style name="AppTheme.FullScreen">
        <item name="windowNoTitle">true</item>
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowIsTranslucent">true</item>
    </style>

    <!-- APPLY_THEME_START -->
    <style name="AppTheme.Light">
        <item name="pageRootBg">@android:color/holo_red_light</item>
        <item name="seekThumbColor">#4CAF50</item>
        <item name="seekProgressDrawableColor">#2196F3</item>
        <item name="seekBg">#fff</item>

        <item name="bg_0">@color/light_bg_0</item>
        <item name="m_0">@color/light_m_0</item>
        <item name="m_0_with_opacity">@color/light_m_0_opacity_30</item>

        <item name="color1">@android:color/holo_red_light</item>
        <item name="color2">@android:color/holo_blue_bright</item>
    </style>

    <style name="AppTheme.Dark">
        <item name="pageRootBg">@android:color/holo_green_light</item>
        <item name="seekThumbColor">#FF5722</item>
        <item name="seekProgressDrawableColor">#9C27B0</item>
        <item name="seekBg">#000</item>

        <item name="bg_0">@color/dark_bg_0</item>
        <item name="m_0">@color/dark_m_0</item>
        <item name="m_0_with_opacity">@color/dark_m_0_opacity_80</item>

        <item name="color1">@android:color/holo_orange_dark</item>
        <item name="color2">@android:color/holo_blue_dark</item>
    </style>
    <!-- APPLY_THEME_END -->

    <!-- Dialog，非DialogFragment显示，not found 设置 dialog shadow 的方法。 只能通过 android:backgroundDimAmount 设置 遮盖层 的黑色程度-->
    <style name="AlertDialogStyle" parent="Theme.AppCompat.Light.Dialog.Alert">
        <!-- not work -->
        <!--<item name="android:colorBackground">@android:color/holo_blue_bright</item>-->

        <!-- colorBackgroundCacheHint not work -->
        <!--<item name="android:colorBackgroundCacheHint">@android:color/holo_blue_bright</item>-->

        <!-- 类似于foreground，设置后，dialog content 被完全盖住 -->
        <item name="android:windowFrame">@null</item>
        <!--<item name="android:windowFrame">@android:color/holo_blue_bright</item>-->

        <!--
            not work:对Dialog 不起作用，对AppCompatActivity的 titlebar 起作用
            This Drawable is overlaid over the foreground of the Window's content area, usually to place a shadow below the title.

            当AppCompatActivity时，titlebar下方会有一条很细的蓝色分割线
        -->
        <!--<item name="android:windowContentOverlay">@null</item>-->
        <!--<item name="android:windowContentOverlay">@android:color/holo_red_dark</item>-->

        <!--<item name="android:windowAnimationStyle">@style/Animation.AppCompat.Dialog</item>-->
        <!--<item name="android:windowSoftInputMode">stateUnspecified|adjustPan</item>-->

        <!--<item name="windowActionBar">false</item>-->
        <!--<item name="windowActionModeOverlay">true</item>-->

        <!--<item name="android:buttonBarStyle">@style/Widget.AppCompat.ButtonBar.AlertDialog</item>-->
        <!--<item name="android:borderlessButtonStyle">@style/Widget.AppCompat.Button.Borderless</item>-->

        <!-- 允许dialog 区域外点击后，dialog dismiss -->
        <!--<item name="android:windowCloseOnTouchOutside">true</item>-->

        <!--buttons color-->
        <item name="colorAccent">#ff00ff</item>

        <!--title and message color-->
        <item name="android:textColorPrimary">@android:color/holo_green_dark</item>

        <!-- android:windowBackground: 窗口背景。表现为仅仅设置 dialog root view。
             当Dialog.setView(customView)，不显示自带title和button时，该设置无效。

            android:background : 设置布局的背景。 dialog content 的所有view 均设置 background。因此，一般不设置次属性. 当layout 的控件设置了背景，会覆盖该设置
            当Dialog.setView(customView)，不显示自带title和button时，该设置同样有效。

            1. 当同时设置 android:windowBackground 和 android:background时，android:background 生效。android:windowBackground 不太明显，基本上看不出来， 表现为dialog 的边框色。
            2. 当仅设置 windowBackground 时，显示为dialog root view 的背景，效果明显
        -->
        <item name="android:windowBackground">@drawable/background_dialog</item>
        <!--<item name="android:windowBackground">@android:color/holo_red_dark</item>-->
        <!--<item name="android:background">@drawable/background_dialog</item>-->
        <!--<item name="android:background">@android:color/holo_blue_bright</item>-->

        <!--
            浮在Activity之上
            False: 全屏 view.
            True: small view. == content
        -->
        <item name="android:windowIsFloating">true</item>

        <!-- 有遮盖层 -->
        <item name="android:backgroundDimEnabled">true</item>

        <!-- 遮盖层的黑色程度。
            1 是全黑。
            只能改变黑色程度，也就是透明度程度，不能改变颜色。
            dialog.getWindow().setDimAmount(0);
        -->
        <item name="android:backgroundDimAmount">0.8</item>
    </style>

    <!-- 如何设置BottomSheetDialogFragment 的 shadow？
        android:backgroundDimEnabled = true，允许dialog背后的背景变暗，本身就带一个阴影色。可能是Z轴自带的shadow颜色
        android:windowBackground ：设置shadow 颜色
    -->
    <style name="CustomBottomSheetDialogFragmentStyle" parent="Theme.Design.BottomSheetDialog">
        <!-- colorBackground not work -->
        <!--<item name="android:colorBackground">?attr/colorBackgroundFloating</item>-->
        <!--<item name="android:colorBackground">@android:color/holo_blue_light</item>-->

        <!-- colorBackgroundCacheHint not work -->
        <!--<item name="android:colorBackgroundCacheHint">@android:color/holo_red_light</item>-->

        <!-- windowFrame：全屏显示，把一切盖住，包括系统bar -->
        <item name="android:windowFrame">@null</item>
        <!--<item name="android:windowFrame">@android:color/holo_purple</item>-->

        <!-- windowIsFloating
            False: 全屏 view.
            True: small view. == content
             -->
        <item name="android:windowIsFloating">true</item>
        <!--<item name="android:windowIsFloating">false</item>-->

        <!--backgroundDimEnabled
            True:  允许dialog背后的背景变暗
            False: 不允许dialog背后的背景变暗 =>Depressed：没有层次感
         -->
        <item name="android:backgroundDimEnabled">true</item>
        <!--<item name="android:backgroundDimEnabled">false</item>-->

        <!-- windowContentOverlay not work -->
        <item name="android:windowContentOverlay">@null</item>
        <!--<item name="android:windowContentOverlay">@android:color/holo_red_dark</item>-->

        <item name="windowActionBar">false</item>
        <item name="windowActionModeOverlay">true</item>

        <!-- windowBackground  = shadow color of dialog -->
        <!--<item name="android:windowBackground">@android:color/transparent</item>-->
        <item name="android:windowBackground">@color/light_shadow</item>

        <!--<item name="bottomSheetStyle">@style/Widget.Design.BottomSheet.Modal</item>-->
        <item name="bottomSheetStyle">@style/Widget.Design.BottomSheet.Modal_Custom</item>

    </style>

    <style name="Widget.Design.BottomSheet.Modal_Custom" parent="Widget.Design.BottomSheet.Modal">
        <!-- background：content的默认背景色  -->
        <item name="android:background">@android:color/holo_orange_light</item>
    </style>
</resources>